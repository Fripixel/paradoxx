!function(t,i,e,n){"use strict";function s(i,e){this.element=i,this.settings=t.extend({},a,e),this._defaults=a,this._name=o,this.init()}var o="paradoxx",a={position:0,offset:10,position:1,velocity:"0.6s",delay:"0.1s",ease:"ease-in-out",opacity:1,debug:!1};t.extend(s.prototype,{init:function(){var i=t(this.element),e=i.find(".paradoxx__image").data("src");i.find(".paradoxx__image").data("src","");var n=i.find(".paradoxx__image"),s=this.settings.delay,o=this.settings.velocity,a=this.settings.opacity,r=this.settings.ease;n.css({"background-image":"url("+e+")",transition:"all "+o+" "+s+" "+r,opacity:a}),this.scroll(i)},scroll:function(n){var s=0,o=this;t(i).on("scroll",function(i){var a=n.find(".paradoxx__image"),r=n.height(),c=n.position().top+n.find(".paradoxx__image").position().top,u=t(e).scrollTop(),p=u,l=a.position().top;l=parseInt(l);var d={};p>s?u>=c-r&&u<=c+r&&(d=o.moveBackground(l,!0)):u>=c-r&&u<=c+r&&(d=o.moveBackground(l,!1)),a.css(d),s=p})},moveBackground:function(t,i){var e=this.getCalc(t,i),n={},s=t+e;return this.settings.debug&&console.log("counter:"+t+" calc:"+e+" newValue: "+s),n.top=this.unity(s),n},getCalc:function(t,i){var e=i?1:-1;this.settings.position&&(e=i?-1:1);var n=this.settings.offset,s=n*e;return parseInt(s)},unity:function(t,i){return i=i!=n?i:"px",t+i},removeUnity:function(t){var i=t.replace("%","");return i=i.replace("px",""),i=i.replace("em",""),i=i.replace("rem","")}}),t.fn[o]=function(i){return this.each(function(){t.data(this,"plugin_"+o)||t.data(this,"plugin_"+o,new s(this,i))})}}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
