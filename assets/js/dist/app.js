!function(t,i,e,n){"use strict";function s(i,e){this.element=i,this.settings=t.extend({},o,e),this._defaults=o,this._name=a,this.init()}var a="paradoxx",o={offset:10,position:1,velocity:"0.6s",delay:"0.1s",ease:"ease-in-out",opacity:1};t.extend(s.prototype,{init:function(){var i=t(this.element),e=i.find(".paradoxx__image").attr("src");i.find(".paradoxx__image").attr("src","");var n=i.find(".paradoxx__image"),s=this.settings.delay,a=this.settings.velocity,o=this.settings.opacity,r=this.settings.ease;n.css({"background-image":"url("+e+")",transition:"all "+a+" "+s+" "+r,opacity:o});var c=this.settings.offset;this.scroll(i,c)},scroll:function(n,s){var a=0,o=this;t(i).on("scroll",function(i){var s=n.find(".paradoxx__image"),r=n.height(),c=n.position().top+n.find(".paradoxx__image").position().top,u=t(e).scrollTop(),l=u,p=s.position().top;p=parseInt(p);var d={};l>a?u>=c-r&&u<=c+r&&(d=o.moveBackground(p,!0)):u>=c-r&&u<=c+r&&(d=o.moveBackground(p,!1)),s.css(d),a=l})},moveBackground:function(t,i){var e=this.getCalc(t,i),n={},s=t+e;return console.log("counter:"+t+" calc:"+e+" newValue: "+s),n.top=this.unity(s),n},getCalc:function(t,i){var e=i?1:-1,n=this.settings.offset,s=n*e;return parseInt(s)},unity:function(t,i){return i=i!=n?i:"px",t+i},removeUnity:function(t){var i=t.replace("%","");return i=i.replace("px",""),i=i.replace("em",""),i=i.replace("rem","")}}),t.fn[a]=function(i){return this.each(function(){t.data(this,"plugin_"+a)||t.data(this,"plugin_"+a,new s(this,i))})}}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
